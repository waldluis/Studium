/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package zeichenprogramm.view;

/**
 *
 * @author waldhauserlu78556
 */
public class ZeichenFrame extends javax.swing.JFrame {

  /**
   * @return the FcDatei
   */
  public javax.swing.JFileChooser getFcDatei()
  {
    return FcDatei;
  }

    /**
     * Creates new form ZeichenFrame
     */
    public ZeichenFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        FcDatei = new javax.swing.JFileChooser();
        FCsvDatei = new javax.swing.JFileChooser();
        jToolBar1 = new javax.swing.JToolBar();
        jButtonSave = new javax.swing.JButton();
        jButtonOpen = new javax.swing.JButton();
        jButtonPrint = new javax.swing.JButton();
        zeichenView1 = new zeichenprogramm.view.ZeichenView();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jToolBar1.setRollover(true);

        jButtonSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/zeichenprogramm/view/icons/Save24.gif"))); // NOI18N
        jButtonSave.setToolTipText("Save File");
        jButtonSave.setFocusable(false);
        jButtonSave.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonSave.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(jButtonSave);

        jButtonOpen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/zeichenprogramm/view/icons/Open24.gif"))); // NOI18N
        jButtonOpen.setToolTipText("Open File");
        jButtonOpen.setFocusable(false);
        jButtonOpen.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonOpen.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(jButtonOpen);

        jButtonPrint.setIcon(new javax.swing.ImageIcon(getClass().getResource("/zeichenprogramm/view/icons/Print24.gif"))); // NOI18N
        jButtonPrint.setToolTipText("Print File");
        jButtonPrint.setFocusable(false);
        jButtonPrint.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonPrint.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(jButtonPrint);

        getContentPane().add(jToolBar1, java.awt.BorderLayout.PAGE_START);

        zeichenView1.setModel(null);
        getContentPane().add(zeichenView1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ZeichenFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ZeichenFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ZeichenFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ZeichenFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ZeichenFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFileChooser FCsvDatei;
    private javax.swing.JFileChooser FcDatei;
    private javax.swing.JButton jButtonOpen;
    private javax.swing.JButton jButtonPrint;
    private javax.swing.JButton jButtonSave;
    private javax.swing.JToolBar jToolBar1;
    private zeichenprogramm.view.ZeichenView zeichenView1;
    // End of variables declaration//GEN-END:variables

  /**
   * @return the zeichenView1
   */
  public zeichenprogramm.view.ZeichenView getZeichenView1()
  {
    return zeichenView1;
  }

  /**
   * @return the jButtonOpen
   */
  public javax.swing.JButton getjButtonOpen()
  {
    return jButtonOpen;
  }

  /**
   * @return the jButtonPrint
   */
  public javax.swing.JButton getjButtonPrint()
  {
    return jButtonPrint;
  }

  /**
   * @return the jButtonSave
   */
  public javax.swing.JButton getjButtonSave()
  {
    return jButtonSave;
  }

  /**
   * @return the FCsvDatei
   */
  public javax.swing.JFileChooser getFCsvDatei()
  {
    return FCsvDatei;
  }

 

}
